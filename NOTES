waitpid =======>
wait    =======>
pipe    =======>
dup     =======>
dup2    =======> 
execve  =======> 1st argument(const char *path=path to bin) / 2nd argument(argv : argv[0](bin) ... ) / 3rd argument(envp)  
fork    =======>
# define WIFEXITED(status)	__WIFEXITED (status)
https://www.geeksforgeeks.org/exit-status-child-process-linux/
https://dev.to/kumar_abhirup/a-beginner-s-guide-for-setting-up-autocomplete-on-ohmyzsh-hyper-with-plugins-themes-47f2





/*

void    first_command(t_command *command, char *infile,
                        char **envp, t_exec_data *edata)
{
        edata->pid1 = fork();
        if (edata->pid1 == -1)
                fatal("fork function failed!");
        else if (edata->pid1 == 0)
        {
                dup_file(open_file(infile, STDIN), STDIN, &(edata->fd0));
                dup_pipe(0, edata->fds);
                command->name = replace_commands(command->name, envp);
                if (execve(command->name, command->args, envp) == -1)
                        fatal_execve();
        }
}

void    second_command(t_command *command, char *outfile,
                        char **envp, t_exec_data *edata)
{
        edata->pid2 = fork();
        if (edata->pid2 == -1)
                fatal("fork function failed!");
        else if (edata->pid2 == 0)
        {
                dup_pipe(1, edata->fds);
                dup_file(open_file(outfile, STDOUT), STDOUT, &(edata->fd1));
                command->next->name = replace_commands(command->next->name, envp);
                if (execve(command->next->name, command->next->args, envp) == -1)
                        fatal_execve();
                        
void    exec_pipe(t_command *command, char *infile,
                        char *outfile, char **envp)
{
        t_exec_data     edata;

        if (pipe(edata.fds) == -1)
                fatal("pipe function failed!");
        first_command(command, infile, envp, &edata);
        second_command(command, outfile, envp, &edata);
        close(edata.fds[0]);
        close(edata.fds[1]);
        waitpid(edata.pid1, &edata.child_state1, 0);
        waitpid(edata.pid2, &edata.child_state2, 0);
        if (WIFEXITED(edata.child_state2))
        {
                ft_free_command(&command);
                reset_files(edata.fd0, edata.fd1);
                exit(WEXITSTATUS(edata.child_state2));
        }
}

*/